defaults: &defaults
  docker:
    - image: deliveroo/circleci:0.2.3
      environment:
        GO111MODULE: "ON"

version: 2

upload_roo_lambda: &upload_roo_lambda
  <<: *defaults

  steps:
    - attach_workspace:
        at: /tmp/workspace

    - run:
        name: Create deploy package
        run: zip -j /tmp/instagram-service-lambda-go.zip /tmp/workspace/instagram-service-lambda-go

    - run:
        name: Push new Lambda version
        command: |
          `print_env ${TARGET}`
          set -ex
          SOURCE=workspace/instagram-service-lambda-go-${CIRCLE_SHA1}.zip
          DESTINATION=${AWS_S3_PREFIX}/instagram-service-lambda-go/${CIRCLE_SHA1}.zip
          aws s3 cp $SOURCE $DESTINATION

jobs:
  test:
    <<: *defaults

    steps:
      - checkout

      - run:
           name: Ensure modules are available
          command: go mod download

      - run:
          name: Test the Lambda function
          command: env GOOS=linux GOARCH=amd64 go test -v ./...
      - run:
          name: Build the app
          command: env GOOS=linux GOARCH=amd64 go build -o /tmp/instagram-service-lambda-go cmd/instagram-service-lambda-go.go
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
          - "/go/pkg/mod"
      - persist_to_workspace:
          root: /tmp
          paths:
            - instagram-service-lambda-go

  upload_sandbox:
    <<: *upload_roo_lambda
    environment:
      - TARGET: sandbox

  upload_staging:
    <<: *upload_roo_lambda
    environment:
      - TARGET: staging

  upload_production:
    <<: *upload_roo_lambda
    environment:
      - TARGET: production

workflows:
  version: 2
  test_and_upload:
    jobs:
      - test
      - upload_staging: &upload_from_master
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - upload_production:
          <<: *upload_from_master
      - upload_sandbox:
          <<: *upload_from_master
